{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","_ref","title","year","summary","poster","genres","id","React","createElement","src","alt","Link","to","map","genre","index","key","Home","movies","setMovies","useState","isLoading","setIsLoading","useEffect","async","response","fetch","json","data","getMovies","className","movie","medium_cover_image","Detail","useParams","setMovie","console","log","getMovie","App","Router","basename","process","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+KA6BeA,MAzBf,SAAcC,GAA6C,IAA5CC,MAACA,EAAKC,KAAEA,EAAIC,QAAEA,EAAOC,OAAEA,EAAMC,OAAEA,EAAMC,GAAEA,GAAGN,EACrD,OACIO,IAAAC,cAAA,WACID,IAAAC,cAAA,OAAKC,IAAKL,EAAQM,IAAKT,IACvBM,IAAAC,cAAA,UAAID,IAAAC,cAACG,IAAI,CAACC,cAAeN,KAAOL,IAChCM,IAAAC,cAAA,UAAKN,GACLK,IAAAC,cAAA,SAAIL,GACJI,IAAAC,cAAA,UACKH,EAAOQ,IAAI,CAACC,EAAOC,IAChBR,IAAAC,cAAA,MAAIQ,IAAKD,GAAQD,OCwCtBG,MAjDf,WACE,MAEOC,EAAQC,GAAaC,mBAAS,KAC9BC,EAAWC,GAAgBF,oBAAS,GAsB3C,OAdAG,oBAAU,KAPQC,WAChB,MAAMC,cAAwBC,MAJ9B,yEAI0CC,OAE1CR,EAAUM,EAASG,KAAKV,QACxBI,GAAa,IAebO,IACC,IAEDtB,IAAAC,cAAA,OAAKsB,UAAU,OACZT,EACCd,IAAAC,cAAA,WAAK,0BAELD,IAAAC,cAAA,OAAKsB,UAAU,oBACZZ,EAAOL,IAAKkB,GACXxB,IAAAC,cAACT,EAAK,CACJiB,IAAKe,EAAMzB,GACXL,MAAO8B,EAAM9B,MACbC,KAAM6B,EAAM7B,KACZC,QAAS4B,EAAM5B,QACfC,OAAQ2B,EAAMC,mBACd3B,OAAQ0B,EAAM1B,OACdC,GAAIyB,EAAMzB,SCvBT2B,MAlBf,WACI,MAAM3B,GAAEA,GAAO4B,eACRH,EAAOI,GAAYf,mBAAS,IAWnC,OAHAG,oBAAU,KAPOC,WACb,MAAMG,cACID,2DAA2DpB,MACnEqB,OACFS,QAAQC,IAAIV,GACZQ,EAASR,EAAKC,KAAKG,QAGnBO,IACD,IAEC/B,IAAAC,cAAA,UAAKuB,EAAM9B,QCCJsC,MAXf,WACI,OACIhC,IAAAC,cAACgC,IAAM,CAACC,SAAUC,UACdnC,IAAAC,cAACmC,IAAM,KACHpC,IAAAC,cAACoC,IAAK,CAACC,KAAK,IAAIC,QAASvC,IAAAC,cAACS,EAAI,QAC9BV,IAAAC,cAACoC,IAAK,CAACC,KAAK,cAAcC,QAASvC,IAAAC,cAACyB,EAAM,WCA3Cc,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKpD,IAAiD,IAAhDsD,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS1D,EACpEsD,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxD,IAAAC,cAACD,IAAMyD,WAAU,KACfzD,IAAAC,cAAC+B,EAAG,QAORQ","file":"static/js/main.b2ff7d25.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction Movie({title, year, summary, poster, genres, id}) {\n    return (\n        <div>\n            <img src={poster} alt={title} />\n            <h2><Link to={`/detail/${id}`}>{title}</Link></h2>\n            <h3>{year}</h3>\n            <p>{summary}</p>\n            <ul>\n                {genres.map((genre, index) => (\n                    <li key={index}>{genre}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    title: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n    id: PropTypes.number.isRequired,\n}\n\nexport default Movie;","import React, { useState, useEffect } from 'react';\nimport Movie from '../components/Movie'\n\n\nfunction Home() {\n  const url =\n    \"https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year\";\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const getMovies = async () => {\n    const response = await (await fetch(url)).json();\n    // const data = await response.json();\n    setMovies(response.data.movies);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    // async function fetchMovies() {\n    //   try {\n    //     const response = await fetch(url);\n    //     const data = await response.json();\n    //     setMovies(data.data.movies);\n    //     setIsLoading(false);\n    //   } catch (error) {\n    //     console.error(\"API 요청 중 오류 발생:\", error);\n    //     setIsLoading(false);\n    //   }\n    // }\n    getMovies();\n  }, []);\n  return (\n    <div className=\"App\">\n      {isLoading ? (\n        <div>로딩 중...</div>\n      ) : (\n        <div className=\"movie-background\">\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id}\n              title={movie.title}\n              year={movie.year}\n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n              id={movie.id}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction Detail() {\n    const { id } = useParams();\n    const [movie, setMovie] = useState([]);\n    const getMovie = async () => {\n        const json = await (\n            await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n        ).json();\n        console.log(json);\n        setMovie(json.data.movie);\n    };\n    useEffect(() => {\n        getMovie();\n    }, []);\n    return (\n        <h1>{movie.title}</h1>\n    )\n}\n\nexport default Detail;","import React, { useState, useEffect } from 'react';\n\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Detail from './routes/Detail';\n\n\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/detail/:id\" element={<Detail />} />\n            </Routes>\n        </Router>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}